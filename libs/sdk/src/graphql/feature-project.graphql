fragment ProjectDetails on Project {
  amountManagerUsd
  amountReferralUsd
  amountTotalUsd
  avatarUrl
  communityId
  community {
    ...CommunityDetails
  }
  createdAt
  duration
  endDate
  id
  instructions
  linkDiscord
  linkGithub
  linkTelegram
  linkTwitter
  linkWebsite
  managers {
    ...UserDetails
  }
  manageUrl
  name
  reviewCount
  reviewsOpen
  slug
  startDate
  status
  tags
  updatedAt
  viewUrl
}

query reviewerFindManyProject($input: ReviewerFindManyProjectInput!) {
  paging: reviewerFindManyProject(input: $input) {
    data {
      ...ProjectDetails
    }
    meta {
      ...PagingMetaDetails
    }
  }
}

query reviewerFindOneProject($projectId: String!) {
  item: reviewerFindOneProject(projectId: $projectId) {
    ...ProjectDetails
  }
}

query adminFindManyProject($input: AdminFindManyProjectInput!) {
  paging: adminFindManyProject(input: $input) {
    data {
      ...ProjectDetails
    }
    meta {
      ...PagingMetaDetails
    }
  }
}

query adminFindOneProject($projectId: String!) {
  item: adminFindOneProject(projectId: $projectId) {
    ...ProjectDetails
    referral {
      ...UserDetails
    }
    reviewers {
      ...UserDetails
    }
  }
}

mutation adminUpdateProject($projectId: String!, $input: AdminUpdateProjectInput!) {
  updated: adminUpdateProject(projectId: $projectId, input: $input) {
    ...ProjectDetails
  }
}

mutation adminDeleteProject($projectId: String!) {
  deleted: adminDeleteProject(projectId: $projectId)
}

mutation adminAddProjectManager($projectId: String!, $managerUserId: String!) {
  added: adminAddProjectManager(projectId: $projectId, managerUserId: $managerUserId)
}

mutation adminRemoveProjectManager($projectId: String!, $managerUserId: String!) {
  removed: adminRemoveProjectManager(projectId: $projectId, managerUserId: $managerUserId)
}

mutation adminAddProjectReviewer($projectId: String!, $reviewerUserId: String!) {
  added: adminAddProjectReviewer(projectId: $projectId, reviewerUserId: $reviewerUserId)
}

mutation adminRemoveProjectReviewer($projectId: String!, $reviewerUserId: String!) {
  removed: adminRemoveProjectReviewer(projectId: $projectId, reviewerUserId: $reviewerUserId)
}

mutation adminAddProjectReferral($projectId: String!, $referralUserId: String!) {
  added: adminAddProjectReferral(projectId: $projectId, referralUserId: $referralUserId)
}

mutation adminRemoveProjectReferral($projectId: String!, $referralUserId: String!) {
  removed: adminRemoveProjectReferral(projectId: $projectId, referralUserId: $referralUserId)
}

query managerFindManyProject($input: ManagerFindManyProjectInput!) {
  paging: managerFindManyProject(input: $input) {
    data {
      ...ProjectDetails
    }
    meta {
      ...PagingMetaDetails
    }
  }
}

query managerFindOneProject($projectId: String!) {
  item: managerFindOneProject(projectId: $projectId) {
    ...ProjectDetails
    referral {
      ...UserDetails
    }
    reviewers {
      ...UserDetails
    }
  }
}

mutation managerCreateProject($input: ManagerCreateProjectInput!) {
  created: managerCreateProject(input: $input) {
    ...ProjectDetails
  }
}

mutation managerUpdateProject($projectId: String!, $input: ManagerUpdateProjectInput!) {
  updated: managerUpdateProject(projectId: $projectId, input: $input) {
    ...ProjectDetails
  }
}

mutation managerDeleteProject($projectId: String!) {
  deleted: managerDeleteProject(projectId: $projectId)
}

mutation managerAddProjectManager($projectId: String!, $managerUserId: String!) {
  added: managerAddProjectManager(projectId: $projectId, managerUserId: $managerUserId)
}

mutation managerRemoveProjectManager($projectId: String!, $managerUserId: String!) {
  removed: managerRemoveProjectManager(projectId: $projectId, managerUserId: $managerUserId)
}

mutation managerAddProjectReviewer($projectId: String!, $reviewerUserId: String!) {
  added: managerAddProjectReviewer(projectId: $projectId, reviewerUserId: $reviewerUserId)
}

mutation managerRemoveProjectReviewer($projectId: String!, $reviewerUserId: String!) {
  removed: managerRemoveProjectReviewer(projectId: $projectId, reviewerUserId: $reviewerUserId)
}

mutation managerAddProjectReferral($projectId: String!, $referralUserId: String!) {
  added: managerAddProjectReferral(projectId: $projectId, referralUserId: $referralUserId)
}

mutation managerRemoveProjectReferral($projectId: String!, $referralUserId: String!) {
  removed: managerRemoveProjectReferral(projectId: $projectId, referralUserId: $referralUserId)
}
